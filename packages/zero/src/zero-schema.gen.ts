/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore: generated file
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "./drizzle-zero.config.js";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
	tables: {
		githubEventsTable: {
			name: "githubEventsTable",
			columns: {
				id: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "githubEventsTable", "id">,
				},
				type: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "githubEventsTable", "type">,
				},
				action: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "githubEventsTable", "action">,
				},
				orgId: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "githubEventsTable", "orgId">,
					serverName: "org_id",
				},
				repoId: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "githubEventsTable", "repoId">,
					serverName: "repo_id",
				},
				content: {
					type: "json",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "githubEventsTable", "content">,
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "githubEventsTable", "createdAt">,
					serverName: "created_at",
				},
			},
			primaryKey: ["id"],
			serverName: "github_events",
		},
		issuesTable: {
			name: "issuesTable",
			columns: {
				id: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "id">,
				},
				githubId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "githubId">,
					serverName: "github_id",
				},
				orgId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "orgId">,
					serverName: "org_id",
				},
				repoId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "repoId">,
					serverName: "repo_id",
				},
				title: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "title">,
					serverName: "name",
				},
				number: {
					type: "number",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "number">,
				},
				state: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "state">,
				},
				locked: {
					type: "boolean",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "locked">,
				},
				body: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "body">,
				},
				content: {
					type: "json",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "content">,
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "createdAt">,
					serverName: "created_at",
				},
				modifiedAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "issuesTable", "modifiedAt">,
					serverName: "modified_at",
				},
			},
			primaryKey: ["id"],
			serverName: "issues",
		},
		nodesInTree: {
			name: "nodesInTree",
			columns: {
				tree_sha: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "nodesInTree", "tree_sha">,
				},
				node_sha: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "nodesInTree", "node_sha">,
				},
				orgId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "nodesInTree", "orgId">,
					serverName: "org_id",
				},
				repoId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "nodesInTree", "repoId">,
					serverName: "repo_id",
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "nodesInTree", "createdAt">,
					serverName: "created_at",
				},
				modifiedAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "nodesInTree", "modifiedAt">,
					serverName: "modified_at",
				},
			},
			primaryKey: ["tree_sha", "node_sha"],
			serverName: "nodes_in_tree",
		},
		organizationsTable: {
			name: "organizationsTable",
			columns: {
				id: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "organizationsTable", "id">,
				},
				githubId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "organizationsTable", "githubId">,
					serverName: "github_id",
				},
				name: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "organizationsTable", "name">,
				},
				avatarUrl: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "organizationsTable", "avatarUrl">,
					serverName: "avatar_url",
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "organizationsTable", "createdAt">,
					serverName: "created_at",
				},
				modifiedAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "organizationsTable", "modifiedAt">,
					serverName: "modified_at",
				},
			},
			primaryKey: ["id"],
			serverName: "organizations",
		},
		pullRequestsTable: {
			name: "pullRequestsTable",
			columns: {
				id: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "id">,
				},
				githubId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "githubId">,
					serverName: "github_id",
				},
				orgId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "orgId">,
					serverName: "org_id",
				},
				repoId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "repoId">,
					serverName: "repo_id",
				},
				title: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "title">,
					serverName: "name",
				},
				number: {
					type: "number",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "number">,
				},
				state: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "state">,
				},
				locked: {
					type: "boolean",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "locked">,
				},
				body: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "body">,
				},
				content: {
					type: "json",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "content">,
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "createdAt">,
					serverName: "created_at",
				},
				modifiedAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "pullRequestsTable", "modifiedAt">,
					serverName: "modified_at",
				},
			},
			primaryKey: ["id"],
			serverName: "pull_requests",
		},
		reposTable: {
			name: "reposTable",
			columns: {
				id: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "id">,
				},
				githubId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "githubId">,
					serverName: "github_id",
				},
				orgId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "orgId">,
					serverName: "org_id",
				},
				name: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "name">,
				},
				description: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "description">,
				},
				fork: {
					type: "boolean",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "fork">,
				},
				visibility: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "visibility">,
				},
				stars: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "stars">,
				},
				content: {
					type: "json",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "content">,
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "createdAt">,
					serverName: "created_at",
				},
				modifiedAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "reposTable", "modifiedAt">,
					serverName: "modified_at",
				},
			},
			primaryKey: ["id"],
			serverName: "repos",
		},
		treeNodesTable: {
			name: "treeNodesTable",
			columns: {
				sha: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "sha">,
				},
				orgId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "orgId">,
					serverName: "org_id",
				},
				repoId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "repoId">,
					serverName: "repo_id",
				},
				path: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "path">,
				},
				mode: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "mode">,
				},
				type: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "type">,
				},
				size: {
					type: "number",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "size">,
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "createdAt">,
					serverName: "created_at",
				},
				modifiedAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treeNodesTable", "modifiedAt">,
					serverName: "modified_at",
				},
			},
			primaryKey: ["sha"],
			serverName: "tree_nodes",
		},
		treesTable: {
			name: "treesTable",
			columns: {
				sha: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treesTable", "sha">,
				},
				orgId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treesTable", "orgId">,
					serverName: "org_id",
				},
				repoId: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treesTable", "repoId">,
					serverName: "repo_id",
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treesTable", "createdAt">,
					serverName: "created_at",
				},
				modifiedAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "treesTable", "modifiedAt">,
					serverName: "modified_at",
				},
			},
			primaryKey: ["sha"],
			serverName: "trees",
		},
		usersTable: {
			name: "usersTable",
			columns: {
				id: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "usersTable", "id">,
				},
				email: {
					type: "string",
					optional: false,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "usersTable", "email">,
				},
				githubId: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "usersTable", "githubId">,
					serverName: "github_id",
				},
				githubEmail: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "usersTable", "githubEmail">,
					serverName: "github_email",
				},
				githubAvatarUrl: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "usersTable", "githubAvatarUrl">,
					serverName: "github_avatar_url",
				},
				githubName: {
					type: "string",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "usersTable", "githubName">,
					serverName: "github_name",
				},
				createdAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "usersTable", "createdAt">,
					serverName: "created_at",
				},
				modifiedAt: {
					type: "number",
					optional: true,
					customType: null as unknown as ZeroCustomType<typeof zeroSchema, "usersTable", "modifiedAt">,
					serverName: "modified_at",
				},
			},
			primaryKey: ["id"],
			serverName: "users",
		},
	},
	relationships: {
		githubEventsTable: {
			org: [{ sourceField: ["orgId"], destField: ["id"], destSchema: "organizationsTable", cardinality: "one" }],
			repo: [{ sourceField: ["repoId"], destField: ["id"], destSchema: "reposTable", cardinality: "one" }],
		},
		nodesInTree: {
			tree: [{ sourceField: ["tree_sha"], destField: ["sha"], destSchema: "treesTable", cardinality: "one" }],
			node: [{ sourceField: ["node_sha"], destField: ["sha"], destSchema: "treeNodesTable", cardinality: "one" }],
			org: [{ sourceField: ["orgId"], destField: ["id"], destSchema: "organizationsTable", cardinality: "one" }],
			repo: [{ sourceField: ["repoId"], destField: ["id"], destSchema: "reposTable", cardinality: "one" }],
		},
		organizationsTable: {
			repos: [{ sourceField: ["id"], destField: ["orgId"], destSchema: "reposTable", cardinality: "many" }],
		},
		pullRequestsTable: {
			org: [{ sourceField: ["orgId"], destField: ["id"], destSchema: "organizationsTable", cardinality: "one" }],
			repo: [{ sourceField: ["repoId"], destField: ["id"], destSchema: "reposTable", cardinality: "one" }],
		},
		reposTable: {
			org: [{ sourceField: ["orgId"], destField: ["id"], destSchema: "organizationsTable", cardinality: "one" }],
		},
		treeNodesTable: {
			nodesInTree: [{ sourceField: ["sha"], destField: ["node_sha"], destSchema: "nodesInTree", cardinality: "many" }],
			org: [{ sourceField: ["orgId"], destField: ["id"], destSchema: "organizationsTable", cardinality: "one" }],
			repo: [{ sourceField: ["repoId"], destField: ["id"], destSchema: "reposTable", cardinality: "one" }],
		},
		treesTable: {
			nodesInTree: [{ sourceField: ["sha"], destField: ["tree_sha"], destSchema: "nodesInTree", cardinality: "many" }],
			org: [{ sourceField: ["orgId"], destField: ["id"], destSchema: "organizationsTable", cardinality: "one" }],
			repo: [{ sourceField: ["repoId"], destField: ["id"], destSchema: "reposTable", cardinality: "one" }],
		},
	},
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
